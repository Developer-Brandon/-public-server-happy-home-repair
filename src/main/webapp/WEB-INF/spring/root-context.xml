<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- Root Context: defines shared resources visible to all other web components -->

    <!-- 1. hikariConfig를 bean으로 등록합니다 -->
    <bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
        <property name="driverClassName" value="com.mysql.cj.jdbc.Driver"></property>
        <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/web_app_test?serverTimezone=Asia/Seoul"></property>
        <property name="username" value="root"></property>
        <property name="password" value="MomentFactory1!1!1!"></property>
    </bean>

    <!-- 2. data source를 등록합니다(hikariCP configuration) -->
    <bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
        <constructor-arg ref="hikariConfig"></constructor-arg>
    </bean>

    <!-- 3. sqlSessionFactory를 등록합니다 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!-- 4. mybatis 관련 annotation 처리를 위해 scan 등록을 합니다 -->
    <mybatis-spring:scan base-package="com.dev.webApp.mapper"></mybatis-spring:scan>

    <!-- 5. component를 scan할 base-package를 등록합니다 -->
    <context:component-scan base-package="com.dev.webApp"></context:component-scan>
</beans>
