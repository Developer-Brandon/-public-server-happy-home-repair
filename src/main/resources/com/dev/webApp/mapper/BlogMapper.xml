<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dev.webApp.mapper.BlogMapper">

    <select id="getTotalCnt" resultType="Integer">
        <![CDATA[
        /* 전체 블로그 포스팅 개수 조회 쿼리 */
        ]]>
        select count(*)
        from happy_home_repair.tb_blog_posting_info as tb_posting_info
    </select>

    <delete id="deleteAll">
        <![CDATA[
        /* 디비에 쌓여있는 정체 포스팅 삭제 쿼리 */
        ]]>
        delete
        from happy_home_repair.tb_blog_posting_info
    </delete>

    <select id="selectAllBlogPostingList"
            parameterType="com.dev.webApp.domain.dto.SelectBlogPostingPaginationDTO"
            resultType="com.dev.webApp.domain.vo.BlogPostingVO">
        <![CDATA[
        /* 전체 블로그 포스팅 리스트 조회 쿼리 */
        ]]>
        select n_b_p_no as postingNo
             , title as title
             , img_src as imgSrc
             , left(replace(posted_reg_dt, '. ', '-') ,length(replace(posted_reg_dt, '. ', '-')) - 1) as postingRegDt
             , date_format(reg_dt, '%Y-%m-%d') as regDt
        from happy_home_repair.tb_blog_posting_info
        order by str_to_date(postingRegDt, '%Y-%m-%d') desc
    </select>

    <select id="selectBlogPostingList"
            parameterType="com.dev.webApp.domain.dto.SelectBlogPostingPaginationDTO"
            resultType="com.dev.webApp.domain.vo.BlogPostingVO">
        <![CDATA[
        /* 전체 블로그 포스팅 리스트 조회 쿼리(client에서 조회할 일이 없어서, pagination 워딩 넣지 않았습니다.) */
        ]]>
        select n_b_p_no as postingNo
             , title as title
             , img_src as imgSrc
             , left(replace(posted_reg_dt, '. ', '-') ,length(replace(posted_reg_dt, '. ', '-')) - 1) as postingRegDt
             , date_format(reg_dt, '%Y-%m-%d') as regDt
        from happy_home_repair.tb_blog_posting_info as tb_posting_info
            order by str_to_date(postingRegDt, '%Y-%m-%d') desc
        limit #{offset}, #{pageSize}
    </select>

    <insert id="insertBlogPosting"
            parameterType="com.dev.webApp.domain.dto.InsertBlogPostingDTO">
        <![CDATA[
        /* 특정 포스팅 삽입 쿼리 (레코드의 차이가 하나일때 사용) */
        insert into happy_home_repair.tb_blog_posting_info(f_t_no, title, img_src, posted_reg_dt)
        value (#{postingTypeNo}, #{postingTitle}, #{postingImageSrc}, #{postingRegDt})
        ]]>
        <selectKey
                keyProperty="insertedPostingNo"
                order="AFTER"
                resultType="Integer">
            /* 특정 포스팅 질문 삽입 쿼리 */
            select max(n_b_p_no)
            from happy_home_repair.tb_blog_posting_info
        </selectKey>
    </insert>

    <insert id="insertBlogPostingList"
            parameterType="com.dev.webApp.domain.dto.InsertBlogPostingListDTO">
        <![CDATA[
            /* 포스팅 리스트 삽입 쿼리*/
            ]]>
        insert into happy_home_repair.tb_blog_posting_info(
        f_t_no, title, img_src, posted_reg_dt
        ) values
        <foreach collection="insertBlogPostingDTOList"
                 item="item"
                 separator=",">
            (
            #{item.postingTypeNo}
            ,#{item.title}
            ,#{item.imgSrc}
            ,#{item.postingRegDt}
            )
        </foreach>
    </insert>
</mapper>
